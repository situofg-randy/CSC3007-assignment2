[{"/Users/angrandy/Desktop/CSC3007-assignment2/src/index.js":"1","/Users/angrandy/Desktop/CSC3007-assignment2/src/Barchart.js":"2","/Users/angrandy/Desktop/CSC3007-assignment2/src/print.js":"3","/Users/angrandy/Desktop/CSC3007-assignment2/src/StackedBarChart.js":"4","/Users/angrandy/Desktop/CSC3007-assignment2/src/useResizeObserver.js":"5"},{"size":272,"mtime":1655649319545,"results":"6","hashOfConfig":"7"},{"size":2398,"mtime":1655655531284,"results":"8","hashOfConfig":"7"},{"size":3990,"mtime":1655652197498,"results":"9","hashOfConfig":"7"},{"size":3931,"mtime":1655657221250,"results":"10","hashOfConfig":"7"},{"size":588,"mtime":1655648598734,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a4cs9i",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/Users/angrandy/Desktop/CSC3007-assignment2/src/index.js",[],[],"/Users/angrandy/Desktop/CSC3007-assignment2/src/Barchart.js",["29"],[],"/Users/angrandy/Desktop/CSC3007-assignment2/src/print.js",[],[],[],"/Users/angrandy/Desktop/CSC3007-assignment2/src/StackedBarChart.js",["30","31","32"],[],"import React, { useEffect, useRef } from \"react\";\nimport {\n  select,\n  scaleBand,\n  axisBottom,\n  stack,\n  max,\n  scaleLinear,\n  axisLeft,\n  stackOrderAscending,\n  pointer\n} from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\n\n/**\n * Component that renders a StackedBarChart\n */\n\nfunction StackedBarChart({ data, keys, colors }) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  var tooltip = select(\"#tooltip\")\n    .append(\"div\")\n    .style(\"opacity\", 0)\n    .attr(\"class\", \"tooltip\")\n    .style(\"background-color\", \"white\")\n    .style(\"border\", \"solid\")\n    .style(\"border-width\", \"1px\")\n    .style(\"border-radius\", \"5px\")\n    .style(\"padding\", \"10px\")\n\n  var mouseover = function(d) {\n    var subgroupName = select(this.parentNode).datum().key;\n    \n    tooltip\n        .html(\"subgroup: \" + subgroupName)\n        .style(\"opacity\", 1)\n  }\n\n  var mousemove = function(d) {\n    tooltip\n      .style(\"left\", (pointer(this)[0]+90) + \"px\") // It is important to put the +90: other wise the tooltip is exactly where the point is an it creates a weird effect\n      .style(\"top\", (pointer(this)[1]) + \"px\")\n  }\n  var mouseleave = function(d) {\n    tooltip\n      .style(\"opacity\", 0)\n  }\n\n  // will be called initially and on every data change\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const { width, height } =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n\n    // stacks / layers\n    const stackGenerator = stack()\n      .keys(keys)\n      .order(stackOrderAscending);\n    const layers = stackGenerator(data);\n    console.log(layers)\n\n    const extent = [\n      0,\n      max(layers, layer => max(layer, sequence => sequence[1]))\n    ];\n\n    // scales\n    const xScale = scaleBand()\n      .domain(data.map(d => d.year))\n      .range([0, width])\n      .padding(0.25);\n\n    const yScale = scaleLinear()\n      .domain(extent)\n      .range([height, 0]);\n\n    // rendering\n    svg\n      .selectAll(\".layer\")\n      .data(layers)\n      .join(\"g\")\n      .attr(\"class\", \"layer\")\n      .attr(\"fill\", layer => colors[layer.key])\n      .selectAll(\"rect\")\n      .data(layer => layer)\n      .join(\"rect\")\n      .attr(\"x\", sequence => xScale(sequence.data.year))\n      .attr(\"width\", xScale.bandwidth())\n      .attr(\"y\", sequence => yScale(sequence[1]))\n      .attr(\"height\", sequence => yScale(sequence[0]) - yScale(sequence[1]))\n      .on(\"mouseover\", (event, d) => {\n        select(\".tooltip\")\n        .text(\"Murder: \" + d.data.Murder + \" Outrage Of Modesty: \" + d.data[\"Outrage Of Modesty\"] + \" Housebreaking: \" + d.data[\"Housebreaking\"] + \" Cheating Related Offences: \" + d.data[\"Cheating Related Offences\"] + \" Rape: \" + d.data[\"Rape\"] + \" Rioting: \" + d.data[\"Rioting\"] + \" Robbery: \" + d.data[\"Robbery\"] + \" Serious Hurt: \" + d.data[\"Serious Hurt\"] +  \" Snatch Theft: \" + d.data[\"Snatch Theft\"] + \" Theft Of Motor Vehicle \" + d.data[\"Theft Of Motor Vehicle\"])\n        .style(\"position\", \"absolute\")\n        .style(\"background\", \"#fff\")\n        .style(\"left\", (event.pageX) + \"px\")\n        .style(\"top\", (event.pageY) + \"px\");\n\n        select(event.currentTarget).classed(\"selected\", true)\n    })\n    .on(\"mouseout\", (event, d) => {\n      select(\".tooltip\")\n      .text(\"\");\n\n      select(event.currentTarget).classed(\"selected\", false)\n  })\n\n    // axes\n    const xAxis = axisBottom(xScale);\n    svg\n      .select(\".x-axis\")\n      .attr(\"transform\", `translate(0, ${height})`)\n      .call(xAxis);\n\n    const yAxis = axisLeft(yScale);\n    svg.select(\".y-axis\").call(yAxis);\n  }, [colors, data, dimensions, keys]);\n\n  return (\n    <React.Fragment>\n      <div class=\"tooltip\"></div>\n      <div ref={wrapperRef} style={{ marginBottom: \"2rem\" }}>\n        <svg ref={svgRef}>\n          <g className=\"x-axis\" />\n          <g className=\"y-axis\" />\n        </svg>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default StackedBarChart;","/Users/angrandy/Desktop/CSC3007-assignment2/src/useResizeObserver.js",[],[],{"ruleId":"33","severity":1,"message":"34","line":32,"column":11,"nodeType":"35","messageId":"36","endLine":32,"endColumn":25},{"ruleId":"33","severity":1,"message":"37","line":34,"column":7,"nodeType":"35","messageId":"36","endLine":34,"endColumn":16},{"ruleId":"33","severity":1,"message":"38","line":42,"column":7,"nodeType":"35","messageId":"36","endLine":42,"endColumn":16},{"ruleId":"33","severity":1,"message":"39","line":47,"column":7,"nodeType":"35","messageId":"36","endLine":47,"endColumn":17},"no-unused-vars","'getRandomColor' is assigned a value but never used.","Identifier","unusedVar","'mouseover' is assigned a value but never used.","'mousemove' is assigned a value but never used.","'mouseleave' is assigned a value but never used."]