{"ast":null,"code":"var _jsxFileName = \"/Users/angrandy/Desktop/CSC3007-assignment2/src/Barchart.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { print } from \"./print\";\nimport StackedBarChart from \"./StackedBarChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Barchart = () => {\n  _s();\n\n  const data = require(\"./data.json\"); // let allKeys = new Set()\n  // Object.values(data).forEach((v) => {allKeys.add(v.year)})      \n  // allKeys = Array.from(allKeys)\n\n\n  let allKeys = [{\n    \"2011\": \"2011\",\n    \"Murder\": \"16\",\n    \"Serious Hurt\": \"406\",\n    \"Rape\": \"150\",\n    \"Outrage Of Modesty\": \"1396\",\n    \"Rioting\": \"172\",\n    \"Robbery\": \"394\",\n    \"Housebreaking\": \"637\",\n    \"Theft Of Motor Vehicle\": \"673\",\n    \"Snatch Theft\": \"349\",\n    \"Cheating Related Offences\": \"3819\"\n  }, {\n    \"2012\": \"2012\",\n    \"Murder\": \"11\",\n    \"Serious Hurt\": \"452\",\n    \"Rape\": \"133\",\n    \"Outrage Of Modesty\": \"1420\",\n    \"Rioting\": \"191\",\n    \"Robbery\": \"290\",\n    \"Housebreaking\": \"545\",\n    \"Theft Of Motor Vehicle\": \"586\",\n    \"Snatch Theft\": \"286\",\n    \"Cheating Related Offences\": \"3419\"\n  }, {\n    \"2013\": \"2013\",\n    \"Murder\": \"16\",\n    \"Serious Hurt\": \"476\",\n    \"Rape\": \"120\",\n    \"Outrage Of Modesty\": \"1325\",\n    \"Rioting\": \"162\",\n    \"Robbery\": \"254\",\n    \"Housebreaking\": \"507\",\n    \"Theft Of Motor Vehicle\": \"404\",\n    \"Snatch Theft\": \"239\",\n    \"Cheating Related Offences\": \"3695\"\n  }];\n  let res = data.reduce((acc, _ref) => {\n    let {\n      year,\n      level_2,\n      value\n    } = _ref;\n    acc[year] = acc[year] || new Set();\n    acc[year][level_2] = value;\n    acc[year][year] = year;\n    return acc;\n  }, {});\n  let values = [];\n  allKeys.forEach(k => {\n    values.push(res[k]);\n  });\n  let colors = {};\n\n  const getRandomColor = () => {\n    let letters = '0123456789ABCDEF';\n    let color = '#';\n\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n\n    return color;\n  };\n\n  colors = {\n    '2011': \"#D35583\",\n    '2012': \"#8F3F0E\",\n    '2013': \"#58897E\"\n  };\n  print(values);\n  const [keys, setKeys] = useState(allKeys);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stacked Bar Chart with D3 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StackedBarChart, {\n      data: data,\n      keys: keys,\n      colors: colors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fields\",\n      children: allKeys.map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: key,\n          type: \"checkbox\",\n          checked: keys.includes(key),\n          onChange: e => {\n            if (e.target.checked) {\n              setKeys(Array.from(new Set([...keys, key])));\n            } else {\n              setKeys(keys.filter(_key => _key !== key));\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: key,\n          style: {\n            color: colors[key]\n          },\n          children: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Barchart, \"bLrzNhkWvLhr/bWpkTDoOLlm1yI=\");\n\n_c = Barchart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Barchart\");","map":{"version":3,"names":["React","useState","print","StackedBarChart","Barchart","data","require","allKeys","res","reduce","acc","year","level_2","value","Set","values","forEach","k","push","colors","getRandomColor","letters","color","i","Math","floor","random","keys","setKeys","map","key","includes","e","target","checked","Array","from","filter","_key"],"sources":["/Users/angrandy/Desktop/CSC3007-assignment2/src/Barchart.js"],"sourcesContent":["import React from \"react\";  \nimport { useState } from \"react\";\nimport { print } from \"./print\";  \nimport StackedBarChart from \"./StackedBarChart\"\n\nexport const Barchart = () => {\n    const data = require(\"./data.json\")\n    \n    // let allKeys = new Set()\n    // Object.values(data).forEach((v) => {allKeys.add(v.year)})      \n    // allKeys = Array.from(allKeys)\n\n    let allKeys = [\n        {\n            \"2011\": \"2011\",\n            \"Murder\": \"16\",\n            \"Serious Hurt\": \"406\",\n            \"Rape\": \"150\",\n            \"Outrage Of Modesty\": \"1396\",\n            \"Rioting\": \"172\",\n            \"Robbery\": \"394\",\n            \"Housebreaking\": \"637\",\n            \"Theft Of Motor Vehicle\": \"673\",\n            \"Snatch Theft\": \"349\",\n            \"Cheating Related Offences\": \"3819\"\n        },\n        {\n            \"2012\": \"2012\",\n            \"Murder\": \"11\",\n            \"Serious Hurt\": \"452\",\n            \"Rape\": \"133\",\n            \"Outrage Of Modesty\": \"1420\",\n            \"Rioting\": \"191\",\n            \"Robbery\": \"290\",\n            \"Housebreaking\": \"545\",\n            \"Theft Of Motor Vehicle\": \"586\",\n            \"Snatch Theft\": \"286\",\n            \"Cheating Related Offences\": \"3419\"\n        },\n        {\n            \"2013\": \"2013\",\n            \"Murder\": \"16\",\n            \"Serious Hurt\": \"476\",\n            \"Rape\": \"120\",\n            \"Outrage Of Modesty\": \"1325\",\n            \"Rioting\": \"162\",\n            \"Robbery\": \"254\",\n            \"Housebreaking\": \"507\",\n            \"Theft Of Motor Vehicle\": \"404\",\n            \"Snatch Theft\": \"239\",\n            \"Cheating Related Offences\": \"3695\"\n        }]\n\n    let res = data.reduce((acc, {year, level_2, value}) =>\n    {\n        acc[year] = acc[year] || new Set();\n        acc[year][level_2] = value\n        acc[year][year] = year\n        return acc;\n    }, {})\n\n    let values = []\n\n    allKeys.forEach(k => {\n         values.push(res[k])\n    });\n\n    let colors = {}\n\n    const getRandomColor = () => {\n        let letters = '0123456789ABCDEF';\n        let color = '#';\n        for (let i = 0; i < 6; i++) {\n          color += letters[Math.floor(Math.random() * 16)];\n        }\n        return color;\n    }\n\n    colors = {\n        '2011': \"#D35583\",\n        '2012': \"#8F3F0E\",\n        '2013': \"#58897E\"\n    }\n\n    print(values)\n\n    const [keys, setKeys] = useState(allKeys)\n\n    \n    return (\n        <React.Fragment>\n            <h2>Stacked Bar Chart with D3 </h2>\n            <StackedBarChart data={data} keys={keys} colors={colors} />\n\n            <div className=\"fields\">\n                {allKeys.map(key => (\n                <div key={key} className=\"field\">\n                    <input\n                    id={key}\n                    type=\"checkbox\"\n                    checked={keys.includes(key)}\n                    onChange={e => {\n                        if (e.target.checked) {\n                        setKeys(Array.from(new Set([...keys, key])));\n                        } else {\n                        setKeys(keys.filter(_key => _key !== key));\n                        }\n                    }}\n                    />\n                    <label htmlFor={key} style={{ color: colors[key] }}>\n                    {key}\n                    </label>\n                </div>\n                ))}\n            </div>\n        </React.Fragment>\n    )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}