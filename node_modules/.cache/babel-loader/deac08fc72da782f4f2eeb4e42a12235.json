{"ast":null,"code":"var _jsxFileName = \"/Users/angrandy/Desktop/CSC3007-assignment2/src/StackedBarChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { select, scaleBand, axisBottom, stack, max, scaleLinear, axisLeft, stackOrderAscending } from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\n/**\n * Component that renders a StackedBarChart\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StackedBarChart(_ref) {\n  _s();\n\n  let {\n    data,\n    keys,\n    colors\n  } = _ref;\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef); // will be called initially and on every data change\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const {\n      width,\n      height\n    } = dimensions || wrapperRef.current.getBoundingClientRect(); // stacks / layers\n\n    const stackGenerator = stack().keys(keys).order(stackOrderAscending);\n    const layers = stackGenerator(data);\n    console.log(layers);\n    const extent = [0, max(layers, layer => max(layer, sequence => sequence[1]))]; // scales\n\n    const xScale = scaleBand().domain(data.map(d => d.year)).range([0, width]).padding(0.25);\n    const yScale = scaleLinear().domain(extent).range([height, 0]); // rendering\n\n    svg.selectAll(\".layer\").data(layers).join(\"g\").attr(\"class\", \"layer\").attr(\"fill\", layer => colors[layer.key]).selectAll(\"rect\").data(layer => layer).join(\"rect\").attr(\"x\", sequence => xScale(sequence.data.year)).attr(\"width\", xScale.bandwidth()).attr(\"y\", sequence => yScale(sequence[1])).attr(\"height\", sequence => yScale(sequence[0]) - yScale(sequence[1])); // axes\n\n    const xAxis = axisBottom(xScale);\n    svg.select(\".x-axis\").attr(\"transform\", `translate(0, ${height})`).call(xAxis);\n    const yAxis = axisLeft(yScale);\n    svg.select(\".y-axis\").call(yAxis);\n  }, [colors, data, dimensions, keys]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: wrapperRef,\n      style: {\n        marginBottom: \"2rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        children: [/*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"x-axis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"y-axis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StackedBarChart, \"6bFCyBd3HKwDD6FYD4wxcBmp2CY=\", false, function () {\n  return [useResizeObserver];\n});\n\n_c = StackedBarChart;\nexport default StackedBarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"StackedBarChart\");","map":{"version":3,"names":["React","useEffect","useRef","select","scaleBand","axisBottom","stack","max","scaleLinear","axisLeft","stackOrderAscending","useResizeObserver","StackedBarChart","data","keys","colors","svgRef","wrapperRef","dimensions","svg","current","width","height","getBoundingClientRect","stackGenerator","order","layers","console","log","extent","layer","sequence","xScale","domain","map","d","year","range","padding","yScale","selectAll","join","attr","key","bandwidth","xAxis","call","yAxis","marginBottom"],"sources":["/Users/angrandy/Desktop/CSC3007-assignment2/src/StackedBarChart.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport {\n  select,\n  scaleBand,\n  axisBottom,\n  stack,\n  max,\n  scaleLinear,\n  axisLeft,\n  stackOrderAscending\n} from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\n\n/**\n * Component that renders a StackedBarChart\n */\n\nfunction StackedBarChart({ data, keys, colors }) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  // will be called initially and on every data change\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const { width, height } =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n\n    // stacks / layers\n    const stackGenerator = stack()\n      .keys(keys)\n      .order(stackOrderAscending);\n    const layers = stackGenerator(data);\n    console.log(layers)\n\n    const extent = [\n      0,\n      max(layers, layer => max(layer, sequence => sequence[1]))\n    ];\n\n    // scales\n    const xScale = scaleBand()\n      .domain(data.map(d => d.year))\n      .range([0, width])\n      .padding(0.25);\n\n    const yScale = scaleLinear()\n      .domain(extent)\n      .range([height, 0]);\n\n    // rendering\n    svg\n      .selectAll(\".layer\")\n      .data(layers)\n      .join(\"g\")\n      .attr(\"class\", \"layer\")\n      .attr(\"fill\", layer => colors[layer.key])\n      .selectAll(\"rect\")\n      .data(layer => layer)\n      .join(\"rect\")\n      .attr(\"x\", sequence => xScale(sequence.data.year))\n      .attr(\"width\", xScale.bandwidth())\n      .attr(\"y\", sequence => yScale(sequence[1]))\n      .attr(\"height\", sequence => yScale(sequence[0]) - yScale(sequence[1]));\n\n    // axes\n    const xAxis = axisBottom(xScale);\n    svg\n      .select(\".x-axis\")\n      .attr(\"transform\", `translate(0, ${height})`)\n      .call(xAxis);\n\n    const yAxis = axisLeft(yScale);\n    svg.select(\".y-axis\").call(yAxis);\n  }, [colors, data, dimensions, keys]);\n\n  return (\n    <React.Fragment>\n      <div ref={wrapperRef} style={{ marginBottom: \"2rem\" }}>\n        <svg ref={svgRef}>\n          <g className=\"x-axis\" />\n          <g className=\"y-axis\" />\n        </svg>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default StackedBarChart;"],"mappings":"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"},"metadata":{},"sourceType":"module"}