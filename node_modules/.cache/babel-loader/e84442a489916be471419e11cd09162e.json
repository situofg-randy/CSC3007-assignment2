{"ast":null,"code":"var _jsxFileName = \"/Users/angrandy/Desktop/CSC3007-assignment2/src/Barchart.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { print } from \"./print\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Barchart = () => {\n  _s();\n\n  const data = require(\"./data.json\");\n\n  let keys = new Set();\n  Object.values(data).forEach(v => {\n    keys.add(v.year);\n  });\n  keys = Array.from(keys);\n  let res = data.reduce((acc, _ref) => {\n    let {\n      year,\n      level_2,\n      value\n    } = _ref;\n    acc[year] = acc[year] || new Set();\n    acc[year][level_2] = value;\n    acc[year][year] = year;\n    return acc;\n  }, {});\n  let values = [];\n  keys.forEach(k => {\n    values.push(res[k]);\n  });\n  const [currentKeys, setCurrentKeys] = useState(keys);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StackedBarChart, {\n      data: values,\n      keys: keys,\n      colors: colors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fields\",\n      children: keys.map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: key,\n          type: \"checkbox\",\n          checked: currentKeys.includes(key),\n          onChange: e => {\n            if (e.target.checked) {\n              setCurrentKeys(Array.from(new Set([...currentKeys, key])));\n            } else {\n              setCurrentKeys(currentKeys.filter(_key => _key !== key));\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: key,\n          style: {\n            color: colors[key]\n          },\n          children: \"key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Barchart, \"KQZP+loKewHf1kFgG3oU7bU1SNI=\");\n\n_c = Barchart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Barchart\");","map":{"version":3,"names":["React","useEffect","useState","print","Barchart","data","require","keys","Set","Object","values","forEach","v","add","year","Array","from","res","reduce","acc","level_2","value","k","push","currentKeys","setCurrentKeys","colors","map","key","includes","e","target","checked","filter","_key","color"],"sources":["/Users/angrandy/Desktop/CSC3007-assignment2/src/Barchart.js"],"sourcesContent":["import React from \"react\";  \nimport { useEffect, useState } from \"react\";\nimport { print } from \"./print\";  \n\nexport const Barchart = () => {\n    const data = require(\"./data.json\")\n    \n    let keys = new Set()\n    Object.values(data).forEach((v) => {keys.add(v.year)})      \n    keys = Array.from(keys)\n\n    let res = data.reduce((acc, {year, level_2, value}) =>\n    {\n        acc[year] = acc[year] || new Set();\n        acc[year][level_2] = value\n        acc[year][year] = year\n        return acc;\n    }, {})\n\n    let values = []\n\n    keys.forEach(k => {\n         values.push(res[k])\n    });\n\n    const [currentKeys, setCurrentKeys] = useState(keys)\n\n    \n    return (\n        <React.Fragment>\n            <StackedBarChart data={values} keys={keys} colors={colors} />\n\n            <div className=\"fields\">\n                {keys.map(key => (\n                    <div key={key} className=\"field\">\n                        <input id={key} \n                        type=\"checkbox\" \n                        checked={currentKeys.includes(key)} \n                        onChange={e => { \n                            if (e.target.checked) {\n                                setCurrentKeys(Array.from(new Set([...currentKeys, key])))\n                            } else {\n                                setCurrentKeys(currentKeys.filter(_key => _key !== key))\n                        }}} \n                        />\n                        <label for={key} style={{color:colors[key]}}>key</label>\n                    </div>\n                ))}\n            </div>\n\n        </React.Fragment>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,KAAT,QAAsB,SAAtB;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAC1B,MAAMC,IAAI,GAAGC,OAAO,CAAC,aAAD,CAApB;;EAEA,IAAIC,IAAI,GAAG,IAAIC,GAAJ,EAAX;EACAC,MAAM,CAACC,MAAP,CAAcL,IAAd,EAAoBM,OAApB,CAA6BC,CAAD,IAAO;IAACL,IAAI,CAACM,GAAL,CAASD,CAAC,CAACE,IAAX;EAAiB,CAArD;EACAP,IAAI,GAAGQ,KAAK,CAACC,IAAN,CAAWT,IAAX,CAAP;EAEA,IAAIU,GAAG,GAAGZ,IAAI,CAACa,MAAL,CAAY,CAACC,GAAD,WACtB;IAAA,IAD4B;MAACL,IAAD;MAAOM,OAAP;MAAgBC;IAAhB,CAC5B;IACIF,GAAG,CAACL,IAAD,CAAH,GAAYK,GAAG,CAACL,IAAD,CAAH,IAAa,IAAIN,GAAJ,EAAzB;IACAW,GAAG,CAACL,IAAD,CAAH,CAAUM,OAAV,IAAqBC,KAArB;IACAF,GAAG,CAACL,IAAD,CAAH,CAAUA,IAAV,IAAkBA,IAAlB;IACA,OAAOK,GAAP;EACH,CANS,EAMP,EANO,CAAV;EAQA,IAAIT,MAAM,GAAG,EAAb;EAEAH,IAAI,CAACI,OAAL,CAAaW,CAAC,IAAI;IACbZ,MAAM,CAACa,IAAP,CAAYN,GAAG,CAACK,CAAD,CAAf;EACJ,CAFD;EAIA,MAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAACK,IAAD,CAA9C;EAGA,oBACI,QAAC,KAAD,CAAO,QAAP;IAAA,wBACI,QAAC,eAAD;MAAiB,IAAI,EAAEG,MAAvB;MAA+B,IAAI,EAAEH,IAArC;MAA2C,MAAM,EAAEmB;IAAnD;MAAA;MAAA;MAAA;IAAA,QADJ,eAGI;MAAK,SAAS,EAAC,QAAf;MAAA,UACKnB,IAAI,CAACoB,GAAL,CAASC,GAAG,iBACT;QAAe,SAAS,EAAC,OAAzB;QAAA,wBACI;UAAO,EAAE,EAAEA,GAAX;UACA,IAAI,EAAC,UADL;UAEA,OAAO,EAAEJ,WAAW,CAACK,QAAZ,CAAqBD,GAArB,CAFT;UAGA,QAAQ,EAAEE,CAAC,IAAI;YACX,IAAIA,CAAC,CAACC,MAAF,CAASC,OAAb,EAAsB;cAClBP,cAAc,CAACV,KAAK,CAACC,IAAN,CAAW,IAAIR,GAAJ,CAAQ,CAAC,GAAGgB,WAAJ,EAAiBI,GAAjB,CAAR,CAAX,CAAD,CAAd;YACH,CAFD,MAEO;cACHH,cAAc,CAACD,WAAW,CAACS,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,KAAKN,GAApC,CAAD,CAAd;YACP;UAAC;QARF;UAAA;UAAA;UAAA;QAAA,QADJ,eAWI;UAAO,GAAG,EAAEA,GAAZ;UAAiB,KAAK,EAAE;YAACO,KAAK,EAACT,MAAM,CAACE,GAAD;UAAb,CAAxB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAXJ;MAAA,GAAUA,GAAV;QAAA;QAAA;QAAA;MAAA,QADH;IADL;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAwBH,CAhDM;;GAAMxB,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}